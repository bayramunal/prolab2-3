/*

AnaEkran.cs

*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class AnaEkran : Form
    {


        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        private int childFormNumber = 0;
        List<Form> formlar = new List<Form>();
        public AnaEkran()
        {
            InitializeComponent();
        }

        private void ShowNewForm(object sender, EventArgs e)
        {
            
        }

        private void OpenFile(object sender, EventArgs e)
        {
            
        }

        private void SaveAsToolStripMenuItem_Click(object sender, EventArgs e)
        {
           
        }

        private void ExitToolsStripMenuItem_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void CutToolStripMenuItem_Click(object sender, EventArgs e)
        {
        }

        private void CopyToolStripMenuItem_Click(object sender, EventArgs e)
        {
        }

        private void PasteToolStripMenuItem_Click(object sender, EventArgs e)
        {
        }

        private void ToolBarToolStripMenuItem_Click(object sender, EventArgs e)
        {
        }

        private void StatusBarToolStripMenuItem_Click(object sender, EventArgs e)
        {
        }

        private void CascadeToolStripMenuItem_Click(object sender, EventArgs e)
        {
            LayoutMdi(MdiLayout.Cascade);
        }

        private void TileVerticalToolStripMenuItem_Click(object sender, EventArgs e)
        {
            LayoutMdi(MdiLayout.TileVertical);
        }

        private void TileHorizontalToolStripMenuItem_Click(object sender, EventArgs e)
        {
            LayoutMdi(MdiLayout.TileHorizontal);
        }

        private void ArrangeIconsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            LayoutMdi(MdiLayout.ArrangeIcons);
        }

        private void CloseAllToolStripMenuItem_Click(object sender, EventArgs e)
        {
            foreach (Form childForm in MdiChildren)
            {
                childForm.Close();
            }
        }

        private void tedarikçiHammaddeEkleToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TedarikciHammaddeUret form = new TedarikciHammaddeUret();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;

        }

        private void müþteriÝþlemleriToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }

        private void müþteriEkleToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            Musteriekle form = new Musteriekle();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();


            this.Height = 700;

        }

        public void formlariTemizle()
        {
            for (int i = 0; i < formlar.Count; i++)
            {
                formlar[i].Close();
            }
        }

        private void tedarikçiEkleToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TedarikciEkle form = new TedarikciEkle();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();


            this.Height = 700;

        }

        private void üreticiEkleToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            UreticiEkle form = new UreticiEkle();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();


            this.Height = 700;

        }

        private void kimyasalÜrünSipariþiVerToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            MusteriSiparis form = new MusteriSiparis();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;

        }
        

        private void ürettiðiHammaddeleriListeleToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TedarikciHammaddeStoklari form = new TedarikciHammaddeStoklari();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;

        }

        

        private void hammaddeSatýnAlToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            UreticiHammaddeSatinAl form = new UreticiHammaddeSatinAl();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();


            this.Height = 700;

        }

        private void stoklarýnýGösterToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            UreticiHammaddeleriListele form = new UreticiHammaddeleriListele();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();


            this.Height = 550;

        }

        private void üreticiyeKimyasalMaddeEkleToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            txt_iscilikMaliyeti form = new txt_iscilikMaliyeti();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 700;

        }

        private void üreticiyeGelenSipariþlerToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            UreticiyeGelenSiparisler form = new UreticiyeGelenSiparisler();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();
            this.Height = 550;
        }

        private void kimyasalÜrünStoklarýnýGösterToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            UreticiKimyasalMaddeStoklari form = new UreticiKimyasalMaddeStoklari();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;

        }

        private void karOranlarýnýGösterToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            UreticiKarOranlari form = new UreticiKarOranlari();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;

        }

        private void hammaddeSatýþlarýToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TedarikciSatislari form = new TedarikciSatislari();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLHAMMADDELERToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_HAMMADDELER form = new TBL_HAMMADDELER();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLKIMYASALURUNBILGIToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_KIMYASAL_URUN_BILGI form = new TBL_KIMYASAL_URUN_BILGI();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLKIMYASALURUNLERToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_KIMYASAL_URUNLER form = new TBL_KIMYASAL_URUNLER();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLMUSTERIKMSIPARISToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_MUSTERI_KM_SIPARIS form = new TBL_MUSTERI_KM_SIPARIS();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLMUSTERILERToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_MUSTERILER form = new TBL_MUSTERILER();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLTEDARIKCIToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_TEDARIKCI form = new TBL_TEDARIKCI();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLTEDARIKCIHAMMADDEToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_TEDARIKCI_HAMMADDE form = new TBL_TEDARIKCI_HAMMADDE();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLURETICIToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_URETICI form = new TBL_URETICI();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLURETICIHAMMADDESTOKToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_URETICI_HAMMADDESTOK form = new TBL_URETICI_HAMMADDESTOK();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLURETICIKIMYASALMADDESTOKToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_URETICI_KIMYASALMADDESTOK form = new TBL_URETICI_KIMYASALMADDESTOK();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void tBLURETICITEDARIKCIToolStripMenuItem_Click(object sender, EventArgs e)
        {
            formlariTemizle();
            TBL_URETICI_TEDARIKCI form = new TBL_URETICI_TEDARIKCI();
            formlar.Add(form);
            form.MdiParent = this;
            form.Show();

            this.Height = 550;
        }

        private void AnaEkran_Load(object sender, EventArgs e)
        {
            uretimTarihleriniGetirHammadde();
            uretimTarihleriniGetirKimyasal();

        }

        public void zararlaraEkle(string ureticiId, string hammaddeId, string uretimTarihi, int miktar, double maliyet, string urunTipi)
        {
            komut.Parameters.Clear();
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_URETICI_TARIHIGECMISLER (ureticiId, urunId, uretimTarihi, miktar, maliyet, urunTipi) values ('" + ureticiId + "', '" + hammaddeId + "', '" + uretimTarihi + "', '" + miktar + "', @maliyet, '"+urunTipi+"')";
            komut.Parameters.AddWithValue("@maliyet", maliyet);
            komut.ExecuteNonQuery();

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            komut.Parameters.Clear();
        }

        public void tarihiGeceniSil(string id, string urunTipi)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            if (urunTipi.Equals("hammadde"))
            {

                komut.CommandText = "delete from TBL_URETICI_HAMMADDESTOK WHERE id = '" + id + "'";
            }
            else
            {

                komut.CommandText = "delete from TBL_URETICI_KIMYASALMADDESTOK WHERE id = '" + id + "'";
            }
            komut.ExecuteNonQuery();

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        public string urunAdiGetir(String id, string urunTipi)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            string hammaddeAdi = "";
            SqlDataReader dr;
            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            if (urunTipi.Equals("hammadde"))
            {

                komut.CommandText = "select hammaddeAdi from TBL_HAMMADDELER WHERE id = '" + id + "'";
                dr = komut.ExecuteReader();
                while (dr.Read())
                {
                    hammaddeAdi = dr["hammaddeAdi"].ToString();
                }
                dr.Close();
            }
            else

            {

                komut.CommandText = "select urunAdi from TBL_KIMYASAL_URUNLER WHERE id = '" + id + "'";
                dr = komut.ExecuteReader();
                while (dr.Read())
                {
                    hammaddeAdi = dr["urunAdi"].ToString();
                }
                dr.Close();
            }
            

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            return hammaddeAdi;
        }

        public String rafOmurleri(String id, string urunTipi)
        {
            komut.Parameters.Clear();
            String rafOmurleri = "";
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            if (urunTipi.Equals("hammadde"))
            {

                komut.CommandText = "select rafOmru from TBL_HAMMADDELER WHERE id = '" + id + "'";
            }

            else
            {

                komut.CommandText = "select rafOmru from TBL_KIMYASAL_URUNLER WHERE id = '" + id + "'";
            }

            SqlDataReader dr = komut.ExecuteReader();


            while (dr.Read())
            {
                rafOmurleri = dr["rafOmru"].ToString();
            }
            dr.Close();

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            return rafOmurleri;
        }

        public void uretimTarihleriniGetirKimyasal()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select id, ureticiId, kimyasalMaddeId, uretimTarihi, stok,(iscilikMaliyeti + birimFiyat) as 'Fiyat' from TBL_URETICI_KIMYASALMADDESTOK";
            SqlDataReader dr = komut.ExecuteReader();

            List<String> idler = new List<String>();
            List<String> kimyasalMaddeId = new List<String>();
            List<String> uretimTarihi = new List<String>();
            List<String> stok = new List<String>();
            List<String> ureticiId = new List<String>();
            List<String> fiyat = new List<String>();
            List<String> rafOmru = new List<String>();
            


            while (dr.Read())
            {
                idler.Add(dr["id"].ToString());
                kimyasalMaddeId.Add(dr["kimyasalMaddeId"].ToString());
                uretimTarihi.Add(dr["uretimTarihi"].ToString());
                stok.Add(dr["stok"].ToString());
                ureticiId.Add(dr["ureticiId"].ToString());
                fiyat.Add(dr["Fiyat"].ToString());
            }

            dr.Close();
            for (int i = 0; i < kimyasalMaddeId.Count; i++)
            {
                rafOmru.Add(rafOmurleri(kimyasalMaddeId[i], "kimyasal"));
            }
            int bugun = Convert.ToInt32(DateTime.Today.Day.ToString());
            int buay = Convert.ToInt32(DateTime.Today.Month.ToString());
            int buyil = Convert.ToInt32(DateTime.Today.Year.ToString());

            int gun, ay, yil;

            for (int i = 0; i < idler.Count; i++)
            {
                gun = Convert.ToInt32(uretimTarihi[i].Substring(0, 2));
                ay = Convert.ToInt32(uretimTarihi[i].Substring(2, 2));
                yil = Convert.ToInt32(uretimTarihi[i].Substring(4));

                int indeks = rafOmru[i].IndexOf(" ");
                int raf = Convert.ToInt32(rafOmru[i].Substring(0, indeks));
                DateTime tarih = Convert.ToDateTime(gun + "/" + ay + "/" + (yil + raf));
                //MessageBox.Show("tarih : " + tarih.ToString());
                int sonuc = DateTime.Compare(DateTime.Now, tarih);
                //MessageBox.Show(sonuc.ToString());

               // MessageBox.Show(buyil + " " + (yil + Convert.ToInt32(rafOmru[i].Substring(0, indeks))).ToString());
                if (sonuc > 0)
                {
                    //string ureticiId, string hammaddeId, string uretimTarihi, int miktar, double maliyet
                    zararlaraEkle(ureticiId[i], kimyasalMaddeId[i], uretimTarihi[i], Convert.ToInt32(stok[i]), Convert.ToDouble(fiyat[i]), "kimyasal");
                    tarihiGeceniSil(idler[i], "kimyasal");

                    string kimyasalAdi = urunAdiGetir(kimyasalMaddeId[i],"kimyasal");
                    string mesaj = uretimTarihi[i] + " tarihli " + stok[i] + " adet " + kimyasalAdi + " isimli kimyasal tarihi geçtiði için stoklardan düþülmüþtür.";
                    MessageBox.Show(mesaj, "Bilgilendirme Penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }

            }
        }

        public void uretimTarihleriniGetirHammadde()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select id,ureticiId, hammaddeId, stok, maliyet,  uretimTarihi from TBL_URETICI_HAMMADDESTOK";

            List<String> uretimTarihleri = new List<String>();
            List<String> ureticiId = new List<String>();
            List<String> hammadeId = new List<String>();
            List<String> satirId = new List<String>();
            List<String> miktar = new List<String>();
            List<String> maliyet = new List<String>();
            List<String> rafOmru = new List<String>();


            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                uretimTarihleri.Add(dr["uretimTarihi"].ToString());
                ureticiId.Add(dr["ureticiId"].ToString());
                hammadeId.Add(dr["hammaddeId"].ToString());
                satirId.Add(dr["id"].ToString());
                miktar.Add(dr["stok"].ToString());
                maliyet.Add(dr["maliyet"].ToString());
            }
            dr.Close();

            for (int i = 0; i < hammadeId.Count; i++)
            {
                rafOmru.Add(rafOmurleri(hammadeId[i], "hammadde"));
            }

            int bugun = Convert.ToInt32(DateTime.Today.Day.ToString());
            int buay = Convert.ToInt32(DateTime.Today.Month.ToString());
            int buyil = Convert.ToInt32(DateTime.Today.Year.ToString());

            int gun, ay, yil;

            for (int i = 0; i < uretimTarihleri.Count; i++)
            {
                gun = Convert.ToInt32(uretimTarihleri[i].Substring(0, 2));
                ay = Convert.ToInt32(uretimTarihleri[i].Substring(2, 2));
                yil = Convert.ToInt32(uretimTarihleri[i].Substring(4));


                int indeks = rafOmru[i].IndexOf(" ");
                int raf = Convert.ToInt32(rafOmru[i].Substring(0, indeks));

                DateTime tarih = Convert.ToDateTime(gun + "/" + ay + "/" + (yil + raf));
                int sonuc = DateTime.Compare(DateTime.Now, tarih);

                if (sonuc > 0)
                {
                    zararlaraEkle(ureticiId[i], hammadeId[i], uretimTarihleri[i], Convert.ToInt32(miktar[i]), Convert.ToDouble(maliyet[i]), "Hammadde");
                    tarihiGeceniSil(satirId[i], "hammadde");

                    string hammaddeAdi = urunAdiGetir(hammadeId[i], "hammadde");
                    string mesaj = uretimTarihleri[i] + " tarihli " + miktar[i] + " adet " + hammaddeAdi + " isimli hammadde tarihi geçtiði için stoklardan düþülmüþtür.";
                    MessageBox.Show(mesaj, "Bilgilendirme Penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }

            }

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

    }
}


















/*





	MusteriEkle.cs





*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace VeriTabani
{
    public partial class Musteriekle : Form
    {


        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public Musteriekle()
        {
            InitializeComponent();
        }

        private void Musteriekle_Load(object sender, EventArgs e)
        {
            musterileriGetir("");
        }

        private void button1_Click(object sender, EventArgs e)
        {
            txt_musteriAdi.Text = "";
            txt_musteriSoyadi.Text = "";
            txt_musteriAdres.Text = "";
            txt_musteriAdi.Focus();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {

            komut.Parameters.Clear();

            if (txt_musteriAdi.Text == "")
            {
                MessageBox.Show("Müþteri adý boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else if (txt_musteriSoyadi.Text == "")
            {
                MessageBox.Show("Müþteri soyadý boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else if (txt_musteriAdres.Text == "")
            {
                MessageBox.Show("Müþteri telefon bilgisi boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {

                if (baglanti.State == ConnectionState.Closed)
                {
                    try
                    {
                        baglanti.Open();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }

                komut.Connection = baglanti;
                komut.CommandType = CommandType.StoredProcedure;
                komut.CommandText = "dbo.MUSTERI_EKLE";
                komut.Parameters.AddWithValue("@musteriAdi", txt_musteriAdi.Text.Trim().ToString());
                komut.Parameters.AddWithValue("@musteriSoyadi", txt_musteriSoyadi.Text.Trim().ToString());
                komut.Parameters.AddWithValue("@musteriAdres", txt_musteriAdres.Text.Trim().ToString());

                try
                {
                    komut.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Sorgu çalýþtýrma hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                komut.Parameters.Clear();

                Boolean kontrol = false;

                try
                {
                    komut.Dispose();
                    baglanti.Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Kapanýþ hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    kontrol = true;
                }

                if (kontrol == false)
                {
                    MessageBox.Show(txt_musteriAdi.Text.Trim().ToString() + " adlý müþteri eklendi", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }

                musterileriGetir("");


            }
        }


        public void musterileriGetir(string text)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "SELECT musteriAdi as 'Müþteri Adý', musteriSoyadi as 'Müþteri Soyadý', musteriAdres as 'Müþteri Adres' FROM TBL_MUSTERILER WHERE musteriAdi LIKE '%" + text + "%'";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = 150;
            dataGridView1.Columns[1].Width = 140;
            dataGridView1.Columns[2].Width = 175;
        }

        private void txt_musteriAd_TextChanged(object sender, EventArgs e)
        {
            musterileriGetir("");
        }

        private void chk_guncelle_CheckedChanged(object sender, EventArgs e)
        {
            if (chk_guncelle.Checked)
            {
                groupBox2.Enabled = true;
            }
            else
            {
                groupBox2.Enabled = false;
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "MUSTERISIL";

            komut.Parameters.AddWithValue("@musteriAd", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Müþteri Adý"].Value);
            komut.Parameters.AddWithValue("@musteriSoyad", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Müþteri Soyadý"].Value);
            komut.Parameters.AddWithValue("@musteriAdres", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Müþteri Adres"].Value);
            komut.ExecuteNonQuery();

            Boolean kontrol = false;

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                kontrol = true;
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (kontrol == false)
                MessageBox.Show("Müþteri silindi.", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);


            musterileriGetir("");

        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
        }

        string id = "";

        private void dataGridView1_MouseClick(object sender, MouseEventArgs e)
        {
            string ad = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Müþteri Adý"].Value.ToString();
            string soyad = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Müþteri Soyadý"].Value.ToString();
            string adres = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Müþteri Adres"].Value.ToString();


            txt_guncelleAd.Text = ad;
            txt_guncelleSoyad.Text = soyad;
            txt_guncelleAdres.Text = adres;

            string sorgu = "SELECT id FROM TBL_MUSTERILER WHERE musteriAdi = '" + ad + "' AND musteriSoyadi = '" + soyad + "' AND musteriAdres = '" + adres + "'";

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = sorgu;

            SqlDataReader dr = komut.ExecuteReader();

            while(dr.Read())
            {
                id = dr["id"].ToString();
            }

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }


        }

        private void button1_Click_1(object sender, EventArgs e)
        {

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            string sorgu = "UPDATE TBL_MUSTERILER SET musteriAdi = '" + txt_guncelleAd.Text.Trim().ToString() + "', musteriSoyadi = '" + txt_guncelleSoyad.Text.Trim().ToString() + "', musteriAdres = '" + txt_guncelleAdres.Text.Trim().ToString() + "' WHERE id = '"+id+"'";


            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = sorgu;

            komut.ExecuteNonQuery();

            musterileriGetir("");
            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            MessageBox.Show("Bilgiler güncellendi", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);

        }
    }
}












/*




	MusteriSiparis.cs




*/





using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace VeriTabani
{
    public partial class MusteriSiparis : Form
    {


        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public MusteriSiparis()
        {
            InitializeComponent();
        }

        private void MusteriSiparis_Load(object sender, EventArgs e)
        {
            musterileriGetir();
            kimyasalUrunleriGetir("");
        }

        public void musterileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;

            komut.CommandText = "SELECT musteriAdi FROM TBL_MUSTERILER";

            SqlDataReader dr = komut.ExecuteReader();

            List<String> musteriler = new List<String>();

            while (dr.Read())
            {
                musteriler.Add(dr["musteriAdi"].ToString());
            }


            for (int i = 0; i < musteriler.Count; i++)
            {
                combo_musteriler.Items.Add(musteriler[i]);
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void kimyasalUrunleriGetir(string ara)
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;

            komut.CommandText = "KIMYASAL_URUNLERI_LISTELE";

            komut.Parameters.AddWithValue("@kimyasalMaddeAdi", ara);

            komut.ExecuteNonQuery();

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView2.DataSource = dt;

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView2.Columns[0].Width = dataGridView2.Width / 3;
            dataGridView2.Columns[1].Width = dataGridView2.Width / 3;
            dataGridView2.Columns[2].Width = dataGridView2.Width / 3;

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            kimyasalUrunleriGetir(txt_ara.Text.Trim().ToString());
        }

        private void button2_Click(object sender, EventArgs e)
        {
            //MessageBox.Show(System.DateTime.Today.Day.ToString() + " " + System.DateTime.Today.Month.ToString() + " " + System.DateTime.Today.Year.ToString());

            if (combo_musteriler.SelectedIndex == -1)
            {
                MessageBox.Show("Lütfen bir müþteri seçiniz", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Hand);
                return;
            }

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;

            komut.CommandText = "MUSTERI_KIMYASALURUN_SIPARIS";
            komut.Parameters.AddWithValue("@bilesikFormulu", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Bileþik Formülü"].Value.ToString());
            komut.Parameters.AddWithValue("@musteriAdi", combo_musteriler.SelectedItem.ToString());
            komut.Parameters.AddWithValue("firmaAdi", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Üretici Adý"].Value.ToString());
            komut.Parameters.AddWithValue("@miktar", Convert.ToInt32(txt_adet.Text.Trim()));
           // komut.Parameters.AddWithValue("@uretimTarihi", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Üretim tarihi"].Value.ToString());

            komut.ExecuteNonQuery();

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            MessageBox.Show("Sipariþ oluþturuldu", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);

        }

        private void txt_adet_TextChanged(object sender, EventArgs e)
        {
            int adet;

            if (txt_adet.Text == "")
            {
                adet = 0;
            }
            else
            {
                int a;
                if (int.TryParse(txt_adet.Text.Trim(), out a))
                {
                    adet = Convert.ToInt32(txt_adet.Text.Trim());
                }
                else
                {
                    MessageBox.Show("Yalnýzca sayýsal deðerler kabul edilebilir", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    adet = 0;
                }

            }
            
           

        }
    }
}














/*





	TedarikciEkle.cs





*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Sql;
using System.Data.SqlClient;

namespace VeriTabani
{
    public partial class TedarikciEkle : Form
    {


        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TedarikciEkle()
        {
            InitializeComponent();
        }

        private void TedarikciEkle_Load(object sender, EventArgs e)
        {
            tedarikcileriGetir("");
        }

      

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            if (txt_firmaAdi.Text == "")
            {
                MessageBox.Show("Firma adý boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else if (txt_sehir.Text == "")
            {
                MessageBox.Show("Þehir bilgisi boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else if (txt_ulke.Text == "")
            {
                MessageBox.Show("Ülke bilgisi boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {

                if (baglanti.State == ConnectionState.Closed)
                {
                    try
                    {
                        baglanti.Open();
                    }
                    catch(Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }

                komut.Connection = baglanti;
                komut.CommandType = CommandType.StoredProcedure;
                komut.CommandText = "dbo.TEDARIKCI_EKLE";
                komut.Parameters.AddWithValue("@firmaAdi", txt_firmaAdi.Text.Trim().ToString());
                komut.Parameters.AddWithValue("@ulkeAdi", txt_ulke.Text.Trim().ToString());
                komut.Parameters.AddWithValue("@sehirAdi", txt_sehir.Text.Trim().ToString());
                komut.Parameters.AddWithValue("@uzaklik", txt_uzaklik.Text.Trim());
                
                try
                {
                    komut.ExecuteNonQuery();
                }
                catch(Exception ex)
                {
                    MessageBox.Show(ex.Message, "Sorgu çalýþtýrma hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                komut.Parameters.Clear();

                Boolean kontrol = false;

                try
                {
                    komut.Dispose();
                    baglanti.Close();
                }
                catch(Exception ex)
                {
                    MessageBox.Show(ex.Message, "Kapanýþ hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    kontrol = true;
                }

                if (kontrol == false)
                {
                    MessageBox.Show(txt_firmaAdi.Text.Trim().ToString() + " adlý tedarikçi eklendi", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }

                tedarikcileriGetir("");

            }
        }

        private void groupBox1_Enter(object sender, EventArgs e)
        {

        }

        public void tedarikcileriGetir(string text)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;

            if (rb_ad.Checked)
            {
                komut.CommandText = "SELECT firmaAdi as 'Firma Adý', sehirAdi as 'Þehir', ulkeAdi  as 'Ülke' , uzaklik as Uzaklýk FROM TBL_TEDARIKCI WHERE firmaAdi LIKE '%" + text + "%'";
            }

            if (rb_sehir.Checked)
            {
                komut.CommandText = "SELECT firmaAdi as 'Firma Adý', sehirAdi as 'Þehir',  ulkeAdi  as 'Ülke', uzaklik as Uzaklýk  FROM TBL_TEDARIKCI WHERE  sehirAdi LIKE '%" + text + "%'";
            }

            if (rb_ulke.Checked)
            {
                komut.CommandText = "SELECT firmaAdi as 'Firma Adý',  sehirAdi as 'Þehir', ulkeAdi as 'Ülke', uzaklik as Uzaklýk FROM TBL_TEDARIKCI WHERE ulkeAdi LIKE '%" + text + "%'";
            }

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = dataGridView1.Width/4;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 4;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 4;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 4;
        }


        private void txt_musteriAd_TextChanged(object sender, EventArgs e)
        {
            tedarikcileriGetir(txt_ara.Text.Trim().ToString());
        }

        private void chk_guncelle_CheckedChanged(object sender, EventArgs e)
        {
            if (chk_guncelle.Checked)
            {
                groupBox2.Enabled = true;
            }
            else
                groupBox2.Enabled = false;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_TEDARIKCI WHERE firmaAdi = '"+ dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Firma Adý"].Value.ToString() + "' AND sehirAdi = '"+ dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Þehir"].Value.ToString() + "' AND  ulkeAdi = '"+ dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Ülke"].Value.ToString() + "'";

            komut.ExecuteNonQuery();

            Boolean kontrol = false;

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                kontrol = true;
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (kontrol == false)
                MessageBox.Show("Tedarikçi silindi.", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);

            txt_ara.Text = "";
            tedarikcileriGetir("");

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }
            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "TEDARIKCI_GUNCELLE";

            komut.Parameters.AddWithValue("@tedarikciAdi", txt_guncelleFirmaAdi.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@ulkeAdi", txt_guncelleUlke.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@sehirAdi", txt_guncelleSehir.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@tedarikciId", Convert.ToInt32(id));
            komut.Parameters.AddWithValue("@uzaklik", Convert.ToInt32(txt_guncelleUzaklik.Text.Trim().ToString()));

            komut.ExecuteNonQuery();

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            MessageBox.Show("Tedarikçi güncellendi", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);

            txt_ara.Text = "";
            tedarikcileriGetir("");
        }

        string id = "";

        private void dataGridView1_MouseClick(object sender, MouseEventArgs e)
        {
            string ad = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Firma Adý"].Value.ToString();
            string sehir = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Þehir"].Value.ToString();
            string ulke = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Ülke"].Value.ToString();
            string uzaklik = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Uzaklýk"].Value.ToString();
           

            txt_guncelleFirmaAdi.Text = ad;
            txt_guncelleSehir.Text = sehir;
            txt_guncelleUlke.Text = ulke;
            txt_guncelleUzaklik.Text = uzaklik;


            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }
            string sorgu = "SELECT id FROM TBL_TEDARIKCI WHERE firmaAdi = '"+ad+"' AND   sehirAdi = '"+sehir+"'";
            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = sorgu;

            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                id = dr["id"].ToString();
            }

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }
    }
}











/*




	
	TedarikciHammaddeStoklari.cs	





*/




using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TedarikciHammaddeStoklari : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TedarikciHammaddeStoklari()
        {
            InitializeComponent();
        }

        private void TedarikciHammaddeStoklari_Load(object sender, EventArgs e)
        {
            tedarikcileriGetir();
            for (int i = 0; i < tedarikciler.Count; i++)
            {
                combo_tedarikci.Items.Add(tedarikciler[i]);
            }
            //ismeGoreTedarikciGetir("");

        }

        List<String> tedarikciler = new List<String>();

        public void tedarikcileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT DISTINCT (select firmaAdi from TBL_TEDARIKCI where id = tedarikciId) as 'Firma Adý' FROM TBL_TEDARIKCI_HAMMADDE";
            komut.CommandText = sorgu;


            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                tedarikciler.Add(dr["Firma Adý"].ToString());
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void ismeGoreTedarikciGetir(string text)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT (select firmaAdi from TBL_TEDARIKCI where id =  tedarikciId) as 'Firma Adý', (SELECT sehirAdi FROM TBL_TEDARIKCI WHERE id = tedarikciId) as 'þehir',  (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Hammadde Adý', uretimTarihi as 'Üretim tarihi', satisFiyati as 'Satýþ fiyatý', stok as 'Stok' FROM TBL_TEDARIKCI_HAMMADDE WHERE tedarikciId IN (SELECT id FROM TBL_TEDARIKCI WHERE firmaAdi LIKE '%"+combo_tedarikci.SelectedItem.ToString()+"%') AND (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) LIKE '%"+text+"%'";
            komut.CommandText = sorgu;
            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = 150;
            dataGridView1.Columns[1].Width = 142;
            dataGridView1.Columns[2].Width = 110;
            dataGridView1.Columns[3].Width = 120;
            dataGridView1.Columns[4].Width = 100;
            dataGridView1.Columns[5].Width = 65;
        }

        private void txt_musteriAd_TextChanged(object sender, EventArgs e)
        {

            ismeGoreTedarikciGetir(txt_hammaddeAdi.Text.Trim());


        }

        private void combo_tedarikci_SelectedIndexChanged(object sender, EventArgs e)
        {
            ismeGoreTedarikciGetir("");
        }
    }
}











/*




	TedarikciHammaddeUret.cs



		

*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace VeriTabani
{
    public partial class TedarikciHammaddeUret : Form
    {


        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TedarikciHammaddeUret()
        {
            InitializeComponent();
        }

        private void TedarikciHammaddeUret_Load(object sender, EventArgs e)
        {
            dataGridView1.Rows.Clear();
            dataGridView2.Rows.Clear();
            tedarikcileriGetir();
            hammaddeleriGetir();
        }

        public void tedarikcileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select firmaAdi  as 'Firma Adý',  sehirAdi  as Þehir,  ulkeAdi as Ülke from TBL_TEDARIKCI";
            SqlDataAdapter adapter = new SqlDataAdapter(komut);

            DataTable dt = new DataTable();
            adapter.Fill(dt);

            dataGridView2.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView2.Columns[0].Width = 157;
            dataGridView2.Columns[1].Width = 160;
            dataGridView2.Columns[2].Width = 160;
        }

        public void hammaddeleriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "Select hammaddeAdi as 'Hammadde Adý' from TBL_HAMMADDELER";
            SqlDataAdapter adapter = new SqlDataAdapter(komut);

            DataTable dt = new DataTable();
            adapter.Fill(dt);

            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            //dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[0].Width = 165;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "TEDARIKCI_HAMMADDE_URET";

            komut.Parameters.AddWithValue("@hammaddeAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Hammadde Adý"].Value);
            komut.Parameters.AddWithValue("@tedarikciAdi", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Firma Adý"].Value.ToString());
            komut.Parameters.AddWithValue("@tedarikciSehir", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Þehir"].Value.ToString());
            komut.Parameters.AddWithValue("@uretilenAdet", txt_adet.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@uretimTarihi", txt_uretimTarihi.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@satisFiyati", txt_satisFiyati.Text.Trim().ToString());

            komut.ExecuteNonQuery();

            Boolean kontrol = false;

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                kontrol = true;
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (kontrol == false)
                MessageBox.Show("Hammadde " + dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Firma Adý"].Value.ToString() + " tedarikçisi tarafýndan " + txt_adet.Text.Trim().ToString() + " adet olarak üretildi", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "SELECT hammaddeAdi as 'Hammadde Adý' FROM TBL_HAMMADDELER WHERE hammaddeAdi LIKE '%" + txt_hammaddeAra.Text.Trim().ToString() + "%'";
            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = 165;


        }

        private void txt_musteriAd_TextChanged(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
                {
                    try
                    {
                        baglanti.Open();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }

                komut.Connection = baglanti;
                komut.CommandType = CommandType.Text;

                if (rb_ad.Checked)
                {
                    komut.CommandText = "SELECT firmaAdi 'Firma Adý', (SELECT sehirAdi FROM TBL_SEHIRLER WHERE id = sehirId) as 'Þehir', (SELECT ulkeAdi FROM TBL_ULKELER WHERE id = (SELECT ulkeId FROM TBL_SEHIRLER WHERE id = sehirId)) as 'Ülke' FROM TBL_TEDARIKCI WHERE firmaId IN (SELECT id FROM TBL_TEDARIKCI_ISIMLERI WHERE firmaAdi LIKE '%" + txt_musteriAd.Text.Trim().ToString() + "%')";
                }

                if (rb_sehir.Checked)
                {
                    komut.CommandText = "SELECT firmaAdi  as 'Firma Adý', (SELECT sehirAdi FROM TBL_SEHIRLER WHERE id = sehirId) as 'Þehir', (SELECT ulkeAdi FROM TBL_ULKELER WHERE id = (SELECT ulkeId FROM TBL_SEHIRLER WHERE id = sehirId)) as 'Ülke' FROM TBL_TEDARIKCI WHERE sehirId IN (SELECT id FROM TBL_SEHIRLER WHERE sehirAdi LIKE '%" + txt_musteriAd.Text.Trim().ToString() + "%')";
                }

                if (rb_ulke.Checked)
                {
                    komut.CommandText = "SELECT firmaAdi as 'Firma Adý', (SELECT sehirAdi FROM TBL_SEHIRLER WHERE id = sehirId) as 'Þehir', (SELECT ulkeAdi FROM TBL_ULKELER WHERE id = (SELECT ulkeId FROM TBL_SEHIRLER WHERE id = sehirId)) as 'Ülke' FROM TBL_TEDARIKCI WHERE sehirId IN (SELECT id FROM TBL_SEHIRLER WHERE ulkeId IN (SELECT id FROM TBL_ULKELER WHERE ulkeAdi LIKE '%" + txt_musteriAd.Text.Trim().ToString() + "%'))";
                }

                DataTable dt = new DataTable();
                SqlDataAdapter da = new SqlDataAdapter(komut);
                da.Fill(dt);
                dataGridView2.DataSource = dt;


                try
                {
                    baglanti.Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }


                dataGridView2.Columns[0].Width = 100;
                dataGridView2.Columns[1].Width = 100;
                dataGridView2.Columns[2].Width = 100;
            
        }
    }
}




/*





	TedarikciSatislari.cs






*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TedarikciSatislari : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TedarikciSatislari()
        {
            InitializeComponent();
        }

        private void TedarikciSatislari_Load(object sender, EventArgs e)
        {
            tedarikcileriGetir();
            for (int i = 0; i < tedarikciler.Count; i++)
            {
                combo_tedarikci.Items.Add(tedarikciler[i]);
            }

        }

        List<String> tedarikciler = new List<String>();

        public void tedarikcileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT DISTINCT (select firmaAdi from TBL_TEDARIKCI where id =  tedarikciId) as 'Firma Adý' FROM TBL_URETICI_TEDARIKCI";
            komut.CommandText = sorgu;


            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                tedarikciler.Add(dr["Firma Adý"].ToString());
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void tedarikcininSatislariniGetir(string ad)
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "SELECT (select firmaAdi from TBL_URETICI where id = ureticiId) as 'Üretici adý',	(select hammaddeAdi from TBL_HAMMADDELER where id = hammaddeId) as 'Hammadde adý',	alisFiyati as 'Satýþ fiyatý',adet as Adet,kargoAdi as 'Kargo tipi',kargoUcreti as 'Kargo ücreti',toplamMaliyet as 'Toplam maliyet' FROM TBL_URETICI_TEDARIKCI where tedarikciId = (select id from TBL_TEDARIKCI where firmaAdi like '%"+combo_tedarikci.SelectedItem.ToString()+"%')";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            
            //dataGridView1.Columns[0].Width = 100;
            //dataGridView1.Columns[1].Width = 140;
            //dataGridView1.Columns[2].Width = 130;
            //dataGridView1.Columns[3].Width = 100;
            //dataGridView1.Columns[4].Width = 100;
            //dataGridView1.Columns[5].Width = 100;
        }
        
        private void combo_uretici_SelectedIndexChanged_1(object sender, EventArgs e)
        {

            tedarikcininSatislariniGetir(combo_tedarikci.SelectedItem.ToString());
        }

      

        
    }
}










/*




	UreticiEkle.cs







*/







using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace VeriTabani
{
    public partial class UreticiEkle : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public UreticiEkle()
        {
            InitializeComponent();
        }

        private void UreticiEkle_Load(object sender, EventArgs e)
        {
            ureticileriGetir("");
        }

        public void ureticileriGetir(string text)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;

            if (rb_ad.Checked)
            {
                komut.CommandText = "SELECT firmaAdi  as 'Firma Adý',  sehirAdi  as 'Þehir',  ulkeAdi  as 'Ülke' FROM TBL_URETICI WHERE firmaAdi LIKE '%" + text + "%'";
            }

            if (rb_sehir.Checked)
            {
                komut.CommandText = "SELECT firmaAdi  as 'Firma Adý',  sehirAdi  as 'Þehir', ulkeAdi  as 'Ülke' FROM TBL_URETICI WHERE sehirAdi LIKE '%" + text + "%'";
            }

            if (rb_ulke.Checked)
            {
                komut.CommandText = "SELECT firmaAdi as 'Firma Adý',  sehirAdi as 'Þehir', ulkeAdi  as 'Ülke' FROM TBL_URETICI WHERE ulkeAdi LIKE '%" + text + "%'";
            }

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = 210;
            dataGridView1.Columns[1].Width = 300;
            dataGridView1.Columns[2].Width = 210;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (txt_firmaAdi.Text == "")
            {
                MessageBox.Show("Firma adý boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else if (txt_sehir.Text == "")
            {
                MessageBox.Show("Þehir bilgisi boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else if (txt_ulke.Text == "")
            {
                MessageBox.Show("Ülke bilgisi boþ býrakýlamaz", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {

                if (baglanti.State == ConnectionState.Closed)
                {
                    try
                    {
                        baglanti.Open();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }

                komut.Connection = baglanti;
                komut.CommandType = CommandType.StoredProcedure;
                komut.CommandText = "dbo.URETICIEKLE";
                komut.Parameters.AddWithValue("@firmaAdi", txt_firmaAdi.Text.Trim().ToString());
                komut.Parameters.AddWithValue("@ulkeAdi", txt_ulke.Text.Trim().ToString());
                komut.Parameters.AddWithValue("@sehirAdi", txt_sehir.Text.Trim().ToString());

                try
                {
                    komut.ExecuteNonQuery();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Sorgu çalýþtýrma hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }

                komut.Parameters.Clear();

                Boolean kontrol = false;

                try
                {
                    komut.Dispose();
                    baglanti.Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Kapanýþ hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    kontrol = true;
                }

                if (kontrol == false)
                {
                    MessageBox.Show(txt_firmaAdi.Text.Trim().ToString() + " adlý üretici eklendi", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }


            }

            ureticileriGetir("");

        }

        private void button1_Click(object sender, EventArgs e)
        {
            txt_firmaAdi.Text = "";
            txt_sehir.Text = "";
            txt_ulke.Text = "";

            txt_firmaAdi.Focus();
        }

        private void txt_ara_TextChanged(object sender, EventArgs e)
        {
            ureticileriGetir(txt_ara.Text.Trim().ToString());
        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }
            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "URETICI_GUNCELLE";

            komut.Parameters.AddWithValue("@ureticiAdi", txt_guncelleFirmaAdi.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@ulkeAdi", txt_guncelleUlke.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@sehirAdi", txt_guncelleSehir.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@ureticiId", Convert.ToInt32(id));

            komut.ExecuteNonQuery();

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            MessageBox.Show("Üretici güncellendi", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);

            txt_ara.Text = "";
            ureticileriGetir("");
        }


        string id = "";

        private void dataGridView1_MouseClick(object sender, MouseEventArgs e)
        {
            string ad = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Firma Adý"].Value.ToString();
            string sehir = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Þehir"].Value.ToString();
            string ulke = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Ülke"].Value.ToString();


            txt_guncelleFirmaAdi.Text = ad;
            txt_guncelleSehir.Text = sehir;
            txt_guncelleUlke.Text = ulke;


            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }
            string sorgu = "SELECT id FROM TBL_URETICI WHERE  firmaAdi = '" + ad + "' AND sehirAdi = '" + sehir + "'";
            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = sorgu;

            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                id = dr["id"].ToString();
            }

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
        }

        private void chk_guncelle_CheckedChanged(object sender, EventArgs e)
        {
            if (chk_guncelle.Checked)
            {
                groupBox2.Enabled = true;
            }
            else
            {
                groupBox2.Enabled = false;
            }
        }

        private void button2_Click_1(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_URETICI WHERE firmaAdi = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Firma Adý"].Value.ToString() + "' AND sehirAdi = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Þehir"].Value.ToString() + "' AND ulkeAdi = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Ülke"].Value.ToString() + "'";

            komut.ExecuteNonQuery();

            Boolean kontrol = false;

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                kontrol = true;
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (kontrol == false)
                MessageBox.Show("Üretici silindi.", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);

            txt_ara.Text = "";
            ureticileriGetir("");
        }
    }
}







/*






	UreticiHammaddeleriListele.cs








*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class UreticiHammaddeleriListele : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public UreticiHammaddeleriListele()
        {
            InitializeComponent();
        }

        private void UreticiHammaddeleriListele_Load(object sender, EventArgs e)
        {
            ureticileriGetir();
            for (int i = 0; i < tedarikciler.Count; i++)
            {
                combo_uretici.Items.Add(tedarikciler[i]);
            }
            ismeGoreUreticiGetir("", "");


        }

        List<String> tedarikciler = new List<String>();

        public void ureticileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT DISTINCT (select firmaAdi from TBL_URETICI where  id = ureticiId) as 'Firma Adý' FROM TBL_URETICI_HAMMADDESTOK";
            komut.CommandText = sorgu;


            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                tedarikciler.Add(dr["Firma Adý"].ToString());
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void ismeGoreUreticiGetir(string ad, string text)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT (select firmaAdi from TBL_URETICI where id = ureticiId) as 'Firma Adý', (SELECT sehirAdi FROM TBL_URETICI WHERE id = ureticiId) as 'þehir',  (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Hammadde Adý', uretimTarihi as 'Üretim tarihi',  stok as 'Stok' FROM TBL_URETICI_HAMMADDESTOK WHERE ureticiId IN (SELECT id FROM TBL_URETICI WHERE  firmaAdi LIKE '%" + ad + "%') AND (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) LIKE '%" + text + "%'";
            komut.CommandText = sorgu;
            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = 150;
            dataGridView1.Columns[1].Width = 142;
            dataGridView1.Columns[2].Width = 150;
            dataGridView1.Columns[3].Width = 133;
            dataGridView1.Columns[4].Width = 110;
        }




        private void txt_hammaddeAdi_TextChanged(object sender, EventArgs e)
        {
            try
            {
                ismeGoreUreticiGetir(combo_uretici.SelectedItem.ToString(), txt_hammaddeAdi.Text.Trim());

            }
            catch (Exception ex)
            {
                MessageBox.Show("Üretici seçiniz", "Hata ile karþýlaþýldý", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void combo_uretici_SelectedIndexChanged(object sender, EventArgs e)
        {

            ismeGoreUreticiGetir(combo_uretici.SelectedItem.ToString(), txt_hammaddeAdi.Text.Trim());
        }


    }
}



/*






	UreticiHammaddeSatinAl.cs








*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace VeriTabani
{
    public partial class UreticiHammaddeSatinAl : Form
    {


        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public UreticiHammaddeSatinAl()
        {
            InitializeComponent();
        }

        private void UreticiHammaddeSatinAl_Load(object sender, EventArgs e)
        {
            dataGridView1.Rows.Clear();
            dataGridView2.Rows.Clear();
            tedarikcileriGetir();
            ureticileriGetir();
        }

        public void tedarikcileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT (SELECT firmaAdi FROM TBL_TEDARIKCI WHERE id = tedarikciId) as 'Firma Adý', (SELECT sehirAdi FROM TBL_TEDARIKCI WHERE id  = tedarikciId) as 'Þehir', (SELECT ulkeAdi  FROM TBL_TEDARIKCI WHERE id = tedarikciId) as 'Ülke', (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Hammadde Adý', uretimTarihi as 'Üretim tarihi', (SELECT rafOmru FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Raf ömrü', stok as 'Stok', satisFiyati as 'Satis fiyati' FROM TBL_TEDARIKCI_HAMMADDE";

            komut.CommandText = sorgu;
            SqlDataAdapter adapter = new SqlDataAdapter(komut);

            DataTable dt = new DataTable();
            adapter.Fill(dt);

            dataGridView2.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            
            dataGridView2.Columns[0].Width = 100;
            dataGridView2.Columns[1].Width = 100;
            dataGridView2.Columns[2].Width = 100;
            dataGridView2.Columns[5].Width = 50;
            dataGridView2.Columns[6].Width = 67;
            dataGridView2.Columns[7].Width = 65;
        }

        public void ureticileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "SELECT firmaAdi as 'Üretici Adý', sehirAdi  as 'Þehir',  ulkeAdi  as 'Ülke' FROM TBL_URETICI  WHERE firmaAdi LIKE '%" + txt_ureticiAra.Text.Trim().ToString() + "%'";
            SqlDataAdapter adapter = new SqlDataAdapter(komut);

            DataTable dt = new DataTable();
            adapter.Fill(dt);

            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            //dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[0].Width = 165;
        }

        private void button2_Click(object sender, EventArgs e)
        {


            if (txt_adet.Text == "")
            {
                MessageBox.Show("Alýnacak adeti girmediniz", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            else if (Convert.ToInt32(txt_adet.Text.Trim()) > (Convert.ToInt32(dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Stok"].Value)))
            {
                MessageBox.Show("Sipariþ adedi stoktan fazla olamaz", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "URETICI_HAMMADDE_SATIN_AL";

            komut.Parameters.AddWithValue("@ureticiAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Üretici Adý"].Value.ToString());
            komut.Parameters.AddWithValue("@hammaddeAdi", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Hammadde Adý"].Value.ToString());
            komut.Parameters.AddWithValue("@stok", Convert.ToInt32(txt_adet.Text.Trim()));
            komut.Parameters.AddWithValue("@tedarikciAdi", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Firma Adý"].Value.ToString());

            string kargoAdi = "";

            if (rb_kara.Checked)
                kargoAdi = "Kara";
            if (rb_hava.Checked)
                kargoAdi = "Hava";
            

            komut.Parameters.AddWithValue("@kargoAdi", kargoAdi);
            komut.Parameters.AddWithValue("@alisFiyati", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Satis fiyati"].Value.ToString());
            komut.Parameters.AddWithValue("@uretimTarihi", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Üretim tarihi"].Value.ToString());
            komut.Parameters.AddWithValue("@ureticiSehir", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Þehir"].Value.ToString());
            komut.Parameters.AddWithValue("@tedarikciSehir", dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Þehir"].Value.ToString());

            komut.ExecuteNonQuery();

            Boolean kontrol = false;

            try
            {
                komut.Parameters.Clear();
                komut.Dispose();
                baglanti.Close();
            }
            catch (Exception ex)
            {
                kontrol = true;
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (kontrol == false)
                MessageBox.Show("Hammadde satýn alýndý", "Bilgilendirme mesajý", MessageBoxButtons.OK, MessageBoxIcon.Information);

            tedarikcileriGetir();
            txt_adet.Text = "";

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            ureticileriGetir();

        }

        private void txt_musteriAd_TextChanged(object sender, EventArgs e)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;

            string sorgu = "SELECT (SELECT firmaAdi FROM TBL_TEDARIKCI WHERE id =  tedarikciId) as 'Firma Adý', (SELECT sehirAdi FROM TBL_TEDARIKCI WHERE id = tedarikciId) as 'Þehir', (SELECT ulkeAdi FROM TBL_TEDARIKCI WHERE id = tedarikciId) as 'Ülke', (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Hammadde Adý', uretimTarihi as 'Üretim tarihi', (SELECT rafOmru FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Raf ömrü', stok as 'Stok', satisFiyati as 'Satis fiyati' FROM TBL_TEDARIKCI_HAMMADDE ";

            if (rb_ad.Checked)
            {
                komut.CommandText = sorgu + " WHERE (SELECT firmaAdi FROM TBL_TEDARIKCI WHERE id =  tedarikciId) like '%" + txt_tedarikci.Text.Trim().ToString() + "%' order by satisFiyati asc";
            }

            if (rb_sehir.Checked)
            {
                komut.CommandText = sorgu + " WHERE (SELECT sehirAdi FROM TBL_TEDARIKCI WHERE id = tedarikciId) like '%" + txt_tedarikci.Text.Trim().ToString() + "%' order by satisFiyati asc";
            }

            if (rb_ulke.Checked)
            {
                komut.CommandText = sorgu + " WHERE (SELECT ulkeAdi  FROM TBL_TEDARIKCI WHERE id = tedarikciId)  like '%" + txt_tedarikci.Text.Trim().ToString() + "%' order by satisFiyati asc";
            }

            if (rb_hammadde.Checked)
            {
                komut.CommandText = sorgu + " WHERE (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) like '%" + txt_tedarikci.Text.Trim().ToString() + "%' order by satisFiyati asc";

            }

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView2.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView2.Columns[0].Width = 100;
            dataGridView2.Columns[1].Width = 100;
            dataGridView2.Columns[2].Width = 100;
            dataGridView2.Columns[5].Width = 50;
            dataGridView2.Columns[6].Width = 50;
            dataGridView2.Columns[7].Width = 50;

        }

        private void groupBox2_Enter(object sender, EventArgs e)
        {

        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void txt_adet_TextChanged(object sender, EventArgs e)
        {

            int a;
            if (txt_adet.Text == "")
            {

                int satisFiyati = Convert.ToInt32(fiyat);
                int toplamFiyat = 0 * satisFiyati;

                lbl_odenecek.Text = toplamFiyat.ToString();
            }


            else if (int.TryParse(txt_adet.Text,out a))
            {

                int satisFiyati = Convert.ToInt32(fiyat);
                int toplamFiyat = Convert.ToInt32(txt_adet.Text.Trim().ToString()) * satisFiyati;

                lbl_odenecek.Text = toplamFiyat.ToString();
            }
            else
            {
                txt_adet.Text = "";
                MessageBox.Show("Sadece nümerik ifadeler girilmelidir.", "Bilgilendirme Penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }


        }

        string fiyat = "";

        private void dataGridView2_MouseClick(object sender, MouseEventArgs e)
        {
            fiyat = dataGridView2.Rows[dataGridView2.SelectedCells[0].RowIndex].Cells["Satis fiyati"].Value.ToString();
            lbl_fiyat.Text = "x " + fiyat + " = ";
        }
    }
}





/*





	UreticiKarOranlari.cs








*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class UreticiKarOranlari : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public UreticiKarOranlari()
        {
            InitializeComponent();
        }

        private void UreticiKarOranlari_Load(object sender, EventArgs e)
        {
            ureticileriGetir();
            for (int i = 0; i < tedarikciler.Count; i++)
            {
                combo_uretici.Items.Add(tedarikciler[i]);
            }

        }

        List<String> tedarikciler = new List<String>();

        public void ureticileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT DISTINCT (select firmaAdi from TBL_URETICI where id =  ureticiId) as 'Firma Adý' FROM TBL_URETICI_KIMYASALMADDESTOK";
            komut.CommandText = sorgu;


            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                tedarikciler.Add(dr["Firma Adý"].ToString());
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void ismeGoreUreticiGetir(string ad)
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "SELECT (SELECT firmaAdi FROM TBL_URETICI WHERE id = ureticiId) as 'Firma adý', (SELECT musteriAdi FROM TBL_MUSTERILER WHERE id = musteriId) as 'Müþteri Adý', (SELECT urunAdi FROM TBL_KIMYASAL_URUNLER WHERE id = kimyasalMaddeId) as 'Kimyasal madde adý', odenecek as 'Ödenen', urunFiyati as 'Maliyet', odenecek - urunFiyati as 'Kar', karOrani as 'Kar Oraný' FROM TBL_MUSTERI_KM_SIPARIS WHERE ureticiId = (select id from TBL_URETICI WHERE firmaAdi like '%"+combo_uretici.SelectedItem.ToString()+"%')";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            
            
            dataGridView1.Columns[0].Width = dataGridView1.Width / 7;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 7;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 7;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 7;
            dataGridView1.Columns[4].Width = dataGridView1.Width / 7;
            dataGridView1.Columns[5].Width = dataGridView1.Width / 7;
            dataGridView1.Columns[6].Width = dataGridView1.Width / 7;
        }
        
        private void combo_uretici_SelectedIndexChanged_1(object sender, EventArgs e)
        {

            ismeGoreUreticiGetir(combo_uretici.SelectedItem.ToString());
            zararlariListele();
        }

        public void zararlariListele()
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select urunId as 'Ürün Adý', uretimTarihi as 'Uretim tarihi', miktar as Miktar, maliyet as Maliyet, urunTipi as 'Ürün tipi' FROM TBL_URETICI_TARIHIGECMISLER";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView2.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            dataGridView2.Columns[0].Width = dataGridView2.Width / 4;
            dataGridView2.Columns[1].Width = dataGridView2.Width / 4;
            dataGridView2.Columns[2].Width = dataGridView2.Width / 4;
            dataGridView2.Columns[3].Width = dataGridView2.Width / 4;

            dataGridView2.Columns[1].Visible = false;

            List<String> degerler = new List<String>();

            for (int i = 0; i < dataGridView2.RowCount-1; i++)
            {
                //MessageBox.Show(dataGridView2.Rows[i].Cells["Ürün Adý"].Value.ToString());

                degerler.Add( urunIsimleriniGetir(dataGridView2.Rows[i].Cells["Ürün Adý"].Value.ToString(), dataGridView2.Rows[i].Cells["Ürün tipi"].Value.ToString()));
                
            }

            for (int i = 0; i < degerler.Count; i++)
            {
                //MessageBox.Show(degerler[i]);
                dataGridView2.Rows[i].Cells[0].Value = degerler[i];
            }



        }


        public string urunIsimleriniGetir(String id, string tip)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            string ad = "";

            SqlDataReader dr;

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            if (tip.Equals("kimyasal"))
            {

                komut.CommandText = "select urunAdi FROM TBL_KIMYASAL_URUNLER WHERE id = " + id + "";
                dr = komut.ExecuteReader();
                while(dr.Read())
                {
                    ad = dr["urunAdi"].ToString();
                }
            }
            else

            {

                komut.CommandText = "select hammaddeAdi FROM TBL_HAMMADDELER WHERE id = " + id + "";
                dr = komut.ExecuteReader();
                while (dr.Read())
                {
                    ad = dr["hammaddeAdi"].ToString();
                }
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            return ad;

        }

    }
}







/*





	UreticiKimyasalMaddeStoklari.cs





*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class UreticiKimyasalMaddeStoklari : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public UreticiKimyasalMaddeStoklari()
        {
            InitializeComponent();
        }

        private void UreticiKimyasalMaddeStoklari_Load(object sender, EventArgs e)
        {
            tedarikcileriGetir();
            for (int i = 0; i < ureticiler.Count; i++)
            {
                combo_uretici.Items.Add(ureticiler[i]);
            }
            //ismeGoreTedarikciGetir("");

        }

        List<String> ureticiler = new List<String>();

        public void tedarikcileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT DISTINCT (select firmaAdi  FROM TBL_URETICI WHERE id = ureticiId) as 'Firma Adý' FROM TBL_URETICI_KIMYASALMADDESTOK";
            komut.CommandText = sorgu;


            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                ureticiler.Add(dr["Firma Adý"].ToString());
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void ismeGoreTedarikciGetir(string text)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT id, (SELECT  urunAdi FROM TBL_KIMYASAL_URUNLER WHERE id = kimyasalMaddeId) as 'Kimyasal Madde Adý', STUFF((SELECT ',' + CONCAT(CAST((olustuguHammaddeMiktari) as varchar), ' adet ', (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = olustuguHammaddeId) )FROM TBL_KIMYASAL_URUN_BILGI WHERE  kimyasalMaddeId = uks.kimyasalMaddeId FOR XML PATH('')),1,1,' ') as 'Oluþtuðu Hammaddeler', uretimTarihi as 'Üretim tarihi' , stok as Stok, iscilikMaliyeti as 'Ýþçilik Maliyeti', birimFiyat as 'Fiyat' FROM TBL_URETICI_KIMYASALMADDESTOK as uks WHERE ureticiId = (SELECT id FROM TBL_URETICI WHERE  firmaAdi LIKE '%" + combo_uretici.SelectedItem.ToString() + "%') AND (SELECT urunAdi FROM TBL_KIMYASAL_URUNLER WHERE id = uks.kimyasalMaddeId) LIKE '%" + txt_kimyasal.Text.Trim() + "%'";
            komut.CommandText = sorgu;
            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = 105;
            dataGridView1.Columns[2].Width = 167;
            dataGridView1.Columns[5].Width = 65;
            dataGridView1.Columns[6].Width = 70;
            //dataGridView1.Columns[7].Width = 80;
        }

        private void txt_musteriAd_TextChanged(object sender, EventArgs e)
        {

            ismeGoreTedarikciGetir(txt_kimyasal.Text.Trim());


        }

        private void combo_tedarikci_SelectedIndexChanged(object sender, EventArgs e)
        {
            ismeGoreTedarikciGetir("");
        }

        private void chk_guncelle_CheckedChanged(object sender, EventArgs e)
        {
            if (chk_guncelle.Checked)
            {
                groupBox1.Enabled = true;
            }
            else
                groupBox1.Enabled = false;
        }

        int mevcutId;

        private void dataGridView1_MouseClick(object sender, MouseEventArgs e)
        {
            string fiyat, iscilik, karOrani;
            fiyat = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Fiyat"].Value.ToString(); 
            iscilik = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Ýþçilik Maliyeti"].Value.ToString(); 
            //karOrani = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Kar orani"].Value.ToString();
            mevcutId = Convert.ToInt32(dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString());
            

            txt_fiyat.Text = fiyat;
            txt_iscilik.Text = iscilik;

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_URETICI_KIMYASALMADDESTOK SET iscilikMaliyeti = '"+txt_iscilik.Text.Trim()+"', birimFiyat = '"+txt_fiyat.Text.Trim()+"' WHERE id = '"+mevcutId+"'";

            komut.ExecuteNonQuery();

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            ismeGoreTedarikciGetir("");

            MessageBox.Show("Seçili bilgiler güncellendi","Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);

        }
    }
}






/*




	UreticiKimyasalUrunUret.cs




*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class txt_iscilikMaliyeti : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public txt_iscilikMaliyeti()
        {
            InitializeComponent();
        }

        private void UreticiKimyasalUrunUret_Load(object sender, EventArgs e)
        {

            // musterileriGetir("");
            ureticileriGetir();

        }


        public void ureticileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;

            komut.CommandText = "SELECT distinct (SELECT firmaAdi FROM TBL_URETICI WHERE id = ureticiId) as 'Firma adý' FROM TBL_URETICI_HAMMADDESTOK";

            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                combo_ureticiler.Items.Add(dr["Firma Adý"].ToString());
            }

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }


        //public void musterileriGetir(string text)
        //{
        //    if (baglanti.State == ConnectionState.Closed)
        //    {
        //        try
        //        {
        //            baglanti.Open();
        //        }
        //        catch (Exception ex)
        //        {
        //            MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
        //        }
        //    }

        //    komut.Connection = baglanti;
        //    komut.CommandType = CommandType.Text;

        //    if (rb_ad.Checked)
        //    {
        //        komut.CommandText = "SELECT (SELECT firmaAdi FROM TBL_URETICI_ISIMLERI WHERE id = ureticiId) as 'Firma adý',(SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Hammadde adý',	stok, uretimTarihi FROM TBL_URETICI_HAMMADDESTOK WHERE  (SELECT firmaAdi FROM TBL_URETICI_ISIMLERI WHERE id = ureticiId) LIKE '%"+txt_musteriAd.Text.Trim().ToString()+"%'";
        //    }

        //    if (rb_hammadde.Checked)
        //    {
        //        komut.CommandText = "SELECT (SELECT firmaAdi FROM TBL_URETICI_ISIMLERI WHERE id = ureticiId) as 'Firma adý',(SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) as 'Hammadde adý',	stok, uretimTarihi FROM TBL_URETICI_HAMMADDESTOK WHERE (SELECT hammaddeAdi FROM TBL_HAMMADDELER WHERE id = hammaddeId) LIKE '%"+txt_musteriAd.Text.Trim().ToString()+"%'";
        //    }


        //    DataTable dt = new DataTable();
        //    SqlDataAdapter da = new SqlDataAdapter(komut);
        //    da.Fill(dt);
        //    dataGridView1.DataSource = dt;


        //    try
        //    {
        //        baglanti.Close();
        //    }
        //    catch (Exception ex)
        //    {
        //        MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
        //    }


        //    dataGridView1.Columns[0].Width = 200;
        //    dataGridView1.Columns[1].Width = 222;
        //    dataGridView1.Columns[2].Width = 200;
        //}

        private void txt_musteriAd_TextChanged(object sender, EventArgs e)
        {

            //musterileriGetir(txt_musteriAd.Text.Trim().ToString());


        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void txt_musteriAd_TextChanged_1(object sender, EventArgs e)
        {

        }

        public void ureticininHammaddeleriniGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;

            komut.CommandText = " SELECT (Select hammaddeAdi from TBL_HAMMADDELER WHERE id = hammaddeId) as 'Hammadde Adý', stok as Stok, maliyet FROM TBL_URETICI_HAMMADDESTOK WHERE ureticiId = (SELECT id FROM TBL_URETICI WHERE firmaAdi = '"+combo_ureticiler.SelectedItem.ToString()+"')";


            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 3;
        }

        public void ureticininKimyasalUrunleri()
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "URETICININ_KIMYASALURUNLERI";

            komut.Parameters.AddWithValue("@ureticiAdi", combo_ureticiler.SelectedItem.ToString());
            komut.Parameters.AddWithValue("@kimyasalMaddeAdi", txt_kimyasalMaddeAdi.Text.Trim().ToString());

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView2.DataSource = dt;

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView2.Columns[0].Width = dataGridView2.Width / 6;
            dataGridView2.Columns[1].Width = dataGridView2.Width / 6;
            dataGridView2.Columns[2].Width = dataGridView2.Width / 6;
            dataGridView2.Columns[3].Width = dataGridView2.Width / 6;
            dataGridView2.Columns[4].Width = dataGridView2.Width / 6;
            dataGridView2.Columns[5].Width = dataGridView2.Width / 6;

        }

        private void combo_ureticiler_SelectedIndexChanged(object sender, EventArgs e)
        {
            ureticininHammaddeleriniGetir();
            ureticininKimyasalUrunleri();
        }

        public string hammaddeSemboluGetir(string ad)
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "Select sembolu FROM TBL_HAMMADDELER WHERE hammaddeAdi = '" + ad + "'";

            SqlDataReader dr = komut.ExecuteReader();

            string sembol = "";

            while (dr.Read())
            {
                sembol = dr["sembolu"].ToString();
            }

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            return sembol;
        }

        private void dataGridView1_MouseClick(object sender, MouseEventArgs e)
        {
            try
            {
                string ad = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Hammadde Adý"].Value.ToString();
                string sembol = hammaddeSemboluGetir(ad);

                lbl_secilenElement.Text = ad + " - " + sembol;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Bilgilendirme Penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


        }

        List<String> bilesik = new List<String>();

        public void bilesigiYazdir()
        {
            lbl_olusturulanBilesik.Text = "";

            for (int i = 0; i < bilesik.Count; i++)
            {
                if (!bilesik[i].Equals(".") && !bilesik[i].Equals("1"))
                {
                    lbl_olusturulanBilesik.Text += bilesik[i];
                }
            }

        }

        private void btn_karistir_Click(object sender, EventArgs e)
        {
            if (txt_maddeMiktari.Text == "0" || txt_maddeMiktari.Text == "")
            {
                MessageBox.Show("Sýfýr deðeri veya boþ deðer kabul edilemez", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error); ;
            }
            else if(Convert.ToInt32(dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Stok"].Value) - Convert.ToInt32(txt_maddeMiktari.Text) < 0)
            {
                MessageBox.Show("Yeterli stok bulunmamaktadýr", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else

            {
                int miktar;
                if (txt_maddeMiktari.Text == "")
                    miktar = 1;
                else
                    miktar = Convert.ToInt32(txt_maddeMiktari.Text.Trim().ToString());

                bilesik.Add(lbl_secilenElement.Text.Substring(lbl_secilenElement.Text.IndexOf("-") + 1).Trim());
                bilesik.Add(".");

                bilesik.Add(miktar.ToString());

                bilesik.Add(".");

                bilesigiYazdir();
                
                    dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Stok"].Value = (Convert.ToInt32(dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["Stok"].Value) - miktar);

                    if (txt_satisFiyati.Text == "")
                    {
                        txt_satisFiyati.Text = dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["maliyet"].Value.ToString();
                    }
                    else
                    {
                        txt_satisFiyati.Text = (Convert.ToDouble(txt_satisFiyati.Text) + Convert.ToDouble(dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["maliyet"].Value) * miktar).ToString();
                    }
                


            }
        }

        public void kimyasalUrunOlustur(string hammadde, string miktar)
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "KIMYASALURUN_OLUSTUR";

            komut.Parameters.AddWithValue("@kimyasalMaddeAdi", txt_kimyasalUrunAdi.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@olustuguHammadde", hammadde.Trim());
            komut.Parameters.AddWithValue("@olustuguHammaddeMiktari", miktar);

            komut.ExecuteNonQuery();

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void KIMYASALURUN_EKLE()
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "KIMYASALURUN_BILGIEKLE";

            komut.Parameters.AddWithValue("@kimyasalUrunAdi", txt_kimyasalUrunAdi.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@rafOmru", txt_rafOmru.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@bilesikFormulu", lbl_olusturulanBilesik.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@ureticiAdi", combo_ureticiler.SelectedItem.ToString());
            komut.Parameters.AddWithValue("@uretimTarihi", txt_uretimTarihi.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@stok", txt_uretilenAdet.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@iscilikMaliyeti", txt_iscilik.Text.Trim().ToString());
            komut.Parameters.AddWithValue("@satisFiyati", Convert.ToDouble(txt_satisFiyati.Text.Trim()));

            komut.ExecuteNonQuery();

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            MessageBox.Show("Kimyasal ürün eklendi");
        }

        public int stokKontrol(string hammadde)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "SELECT sum(stok) as stok FROM TBL_URETICI_HAMMADDESTOK WHERE hammaddeId = (select id from TBL_HAMMADDELER where sembolu = '" + hammadde + "') AND ureticiId = (SELECT id from TBL_URETICI WHERE  firmaAdi = '" + combo_ureticiler.SelectedItem.ToString() + "') ";

            SqlDataReader dr = komut.ExecuteReader();

            int stok = -1;

            while (dr.Read())
            {
                stok = Convert.ToInt32(dr["stok"]);
            }

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return -1;
            }

            return stok;

        }


        public void ureticiStoklariniGuncelle(string hammadde, string miktar)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "URETICI_HAMMADDE_GUNCELLE";

            komut.Parameters.AddWithValue("@ureticiAdi", combo_ureticiler.SelectedItem.ToString());
            komut.Parameters.AddWithValue("@hammaddeSembol", hammadde);
            komut.Parameters.AddWithValue("@stok", Convert.ToInt32(miktar) * Convert.ToInt32(txt_uretilenAdet.Text.Trim()));

            komut.ExecuteNonQuery();


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                
            }

        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {

            int a;
            Boolean kontrol = false;
            for (int i = 0; i < bilesik.Count; i++)
            {
                if (!bilesik[i].Equals(".") && int.TryParse(bilesik[i], out a) == false)
                {
                    int stok = stokKontrol(bilesik[i]);

                    if (stok < (Convert.ToInt32(txt_uretilenAdet.Text.Trim().ToString())) * Convert.ToInt32(bilesik[i + 2]))
                    {
                        kontrol = true;
                        break;
                    }

                }
            }


            if (!kontrol) // stoklar yeterliyse
            {
                
                KIMYASALURUN_EKLE();

                for (int i = 0; i < bilesik.Count - 2; i++)
                {
                    if (!bilesik[i].Equals(".") && int.TryParse(bilesik[i], out a) == false)
                    {
                        kimyasalUrunOlustur(bilesik[i], bilesik[i + 2]);
                        ureticiStoklariniGuncelle(bilesik[i], bilesik[i + 2]);
                    }
                }

                
            }
            else
            {
                MessageBox.Show("Kimyasal ürünü üretmek için yeterli hammadde bulunmuyor.", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


        }

        private void groupBox1_Enter(object sender, EventArgs e)
        {

        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void txt_uretilenAdet_TextChanged(object sender, EventArgs e)
        {
            int a;
            if (txt_uretilenAdet.Text == "")
            {
                txt_iscilik.Text = 0.ToString();
            }
            else if (int.TryParse(txt_uretilenAdet.Text, out a) == false)
            {
                MessageBox.Show("Sadece sayýsal deðerler kabul edilebilir", "Bilgilendirme Kutusu", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {

                txt_iscilik.Text = txt_uretilenAdet.Text.ToString();

            }
            
        }
    }
}









/*




	UreticiyeGelenSiparisler.cs






*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class UreticiyeGelenSiparisler : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public UreticiyeGelenSiparisler()
        {
            InitializeComponent();
        }

        private void UreticiyeGelenSiparisler_Load(object sender, EventArgs e)
        {
            ureticileriGetir();
            for (int i = 0; i < tedarikciler.Count; i++)
            {
                combo_uretici.Items.Add(tedarikciler[i]);
            }
            ismeGoreUreticiGetir("", "");

        }

        List<String> tedarikciler = new List<String>();

        public void ureticileriGetir()
        {
            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            string sorgu = "SELECT DISTINCT (select firmaAdi from TBL_URETICI where id = ureticiId) as 'Firma Adý' FROM TBL_URETICI_HAMMADDESTOK";
            komut.CommandText = sorgu;


            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                tedarikciler.Add(dr["Firma Adý"].ToString());
            }


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        public void ismeGoreUreticiGetir(string ad, string text)
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "URETICININ_SIPARISLERINI_GETIR";

            komut.Parameters.AddWithValue("@ureticiAdi", ad);

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }


            dataGridView1.Columns[0].Width = 150;
            dataGridView1.Columns[1].Width = 142;
            dataGridView1.Columns[2].Width = 150;
            dataGridView1.Columns[3].Width = 133;
            dataGridView1.Columns[4].Visible = false;
        }
        
        private void combo_uretici_SelectedIndexChanged_1(object sender, EventArgs e)
        {

            ismeGoreUreticiGetir(combo_uretici.SelectedItem.ToString(), txt_hammaddeAdi.Text.Trim());
        }

        private void txt_hammaddeAdi_TextChanged_1(object sender, EventArgs e)
        {
            ismeGoreUreticiGetir(combo_uretici.SelectedItem.ToString(), txt_hammaddeAdi.Text.Trim());

        }

        private int secilenId, ureticiId, musteriId, kimyasalMaddeId, stok;

        private int stokKontrolu()
        {
            int donecek = 0;
            //SELECT SUM(stok) FROM TBL_URETICI_KIMYASALMADDE WHERE kimyasalMaddeId = 28 AND ureticiId = 3

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }


            komut.Connection = baglanti;
            komut.CommandType = CommandType.StoredProcedure;
            komut.CommandText = "URETICI_KIMYASALURUN_STOK";
            komut.Parameters.AddWithValue("@kimyasalMaddeId", kimyasalMaddeId);
            komut.Parameters.AddWithValue("@ureticiId", ureticiId);

            SqlDataReader dr = komut.ExecuteReader();
            int mevcutStok = 0;
            string okunan = "";
            while (dr.Read())
            {
                okunan = dr["stok"].ToString();
                //MessageBox.Show(okunan);
            }

            mevcutStok = Convert.ToInt32(okunan);

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            if (mevcutStok < stok)
            {
                MessageBox.Show("Yeterli stok bulunmamaktadýr.", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                donecek = -1;
            }
            else
                donecek = 1;

            return donecek;
        }

        private void btn_onayla_Click(object sender, EventArgs e)
        {
            if (combo_kar.SelectedIndex == -1)
            {
                MessageBox.Show("Lütfen kâr oranýný giriniz", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {
                if (stokKontrolu() != -1)
                {

                    komut.Parameters.Clear();

                    if (baglanti.State == ConnectionState.Closed)
                    {
                        try
                        {
                            baglanti.Open();
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }


                    komut.Connection = baglanti;
                    komut.CommandType = CommandType.StoredProcedure;
                    komut.CommandText = "URETICI_KIMYASALMADDE_GUNCELLE";
                    komut.Parameters.AddWithValue("@satirId", secilenId);
                    komut.Parameters.AddWithValue("@musteriId", musteriId);
                    komut.Parameters.AddWithValue("@ureticiId", ureticiId);
                    komut.Parameters.AddWithValue("@kimyasalMaddeId", kimyasalMaddeId);
                    komut.Parameters.AddWithValue("@stok", stok);
                    komut.Parameters.AddWithValue("@satisKari", Convert.ToInt32(combo_kar.SelectedItem.ToString()));

                    try
                    {
                        komut.ExecuteNonQuery();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return;
                    }


                    try
                    {
                        baglanti.Close();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        return;
                    }

                    MessageBox.Show("Sipariþ onaylandý", "Bilgilendirme penceresi", MessageBoxButtons.OK, MessageBoxIcon.Information);

                }
            }
        }

        private void dataGridView1_MouseClick(object sender, MouseEventArgs e)
        {
            secilenId = Convert.ToInt32(dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString()) ;

            //MessageBox.Show(secilenId.ToString());

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "SELECT ureticiId, musteriId, kimyasalMaddeId, miktar FROM TBL_MUSTERI_KM_SIPARIS WHERE id = '"+secilenId.ToString()+"'";

            SqlDataReader dr = komut.ExecuteReader();

            while (dr.Read())
            {
                ureticiId = Convert.ToInt32(dr["ureticiId"].ToString());
                kimyasalMaddeId = Convert.ToInt32(dr["kimyasalMaddeId"].ToString());
                stok = Convert.ToInt32(dr["miktar"].ToString());
                musteriId = Convert.ToInt32(dr["musteriId"].ToString());
            }

            //MessageBox.Show
                //(stok.ToString());

            //MessageBox.Show(secilenId.ToString() + " " + ureticiId.ToString() + "  " + kimyasalMaddeId.ToString()  + " " + musteriId.ToString());

            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}





/**********************************************************

	VERITABANI TABLOLARININ KONTROL EDILDIGI FORMLAR

************************************************************/


/*




	TBL_HAMMADDELER.cs







*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_HAMMADDELER : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_HAMMADDELER()
        {
            InitializeComponent();
        }

        private void TBL_HAMMADDELER_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_HAMMADDELER";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 3;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_HAMMADDELER WHERE id = '"+ dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_HAMMADDELER SET hammaddeAdi = @hammaddeAdi, sembolu = @sembol, rafOmru = @rafOmru WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@hammaddeAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@sembol", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["sembolu"].Value.ToString());
            komut.Parameters.AddWithValue("@rafOmru", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["rafOmru"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_HAMMADDELER (hammaddeAdi, sembolu, rafOmru) values (@hammaddeAdi, @sembol, @rafOmru)";
            komut.Parameters.AddWithValue("@hammaddeAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@sembol", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["sembolu"].Value.ToString());
            komut.Parameters.AddWithValue("@rafOmru", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["rafOmru"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}







/*




	TBL_KIMYASAL_URUN_BILGI.cs






*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_KIMYASAL_URUN_BILGI : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_KIMYASAL_URUN_BILGI()
        {
            InitializeComponent();
        }

        private void TBL_KIMYASAL_URUN_BILGI_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_KIMYASAL_URUN_BILGI";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 3;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_KIMYASAL_URUN_BILGI WHERE id = '"+ dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_KIMYASAL_URUN_BILGI SET olustuguHammaddeId = @hammaddeId, olustuguHammaddeMiktari = @miktar, kimyasalMaddeId = @kid WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["olustuguHammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@miktar", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["olustuguHammaddeMiktari"].Value.ToString());
            komut.Parameters.AddWithValue("@kid", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kimyasalMaddeId"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_KIMYASAL_URUN_BILGI (olustuguHammaddeId, olustuguHammaddeMiktari, kimyasalMaddeId) values (@hammaddeId, @miktar, @kimyasalid)";
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["olustuguHammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@miktar", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["olustuguHammaddeMiktari"].Value.ToString());
            komut.Parameters.AddWithValue("@kimyasalid", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kimyasalMaddeId"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}







/*





	TBL_KIMYASAL_URUNLER.cs







*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_KIMYASAL_URUNLER : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_KIMYASAL_URUNLER()
        {
            InitializeComponent();
        }

        private void TBL_KIMYASAL_URUNLER_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_KIMYASAL_URUNLER";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 3;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_KIMYASAL_URUNLER WHERE id = '"+ dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_KIMYASAL_URUNLER SET rafOmru = @rafOmru, bilesikFormulu = @bilesikFormulu, urunAdi = @urunAdi WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@rafOmru", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["rafOmru"].Value.ToString());
            komut.Parameters.AddWithValue("@bilesikFormulu", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["bilesikFormulu"].Value.ToString());
            komut.Parameters.AddWithValue("@urunAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["urunAdi"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_KIMYASAL_URUNLER (bilesikFormulu, urunAdi, rafOmru) values (@bilesikFormulu, @urunAdi, @rafOmru)";
            komut.Parameters.AddWithValue("@bilesikFormulu", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["bilesikFormulu"].Value.ToString());
            komut.Parameters.AddWithValue("@urunAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["urunAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@rafOmru", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["rafOmru"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}




/*





	TBL_MUSTERI_KM_SIPARIS.cs





*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_MUSTERI_KM_SIPARIS : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_MUSTERI_KM_SIPARIS()
        {
            InitializeComponent();
        }

        private void TBL_MUSTERI_KM_SIPARIS_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_MUSTERI_KM_SIPARIS";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[4].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[5].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[6].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[7].Width = dataGridView1.Width / 8;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_MUSTERI_KM_SIPARIS WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_MUSTERI_KM_SIPARIS SET birimMaliyet = @birimMaliyet,karOrani = @karOrani,durum = @durum,odenecek = @odenecek,miktar = @miktar, musteriId = @musteriId, ureticiId = @ureticiId, kimyasalMaddeId = @kimyasalMaddeId WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.Parameters.AddWithValue("@musteriId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriId"].Value.ToString());
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@kimyasalMaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kimyasalMaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@miktar", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["miktar"].Value.ToString());
            komut.Parameters.AddWithValue("@odenecek", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["odenecek"].Value.ToString());
            komut.Parameters.AddWithValue("@durum", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["durum"].Value.ToString());
            komut.Parameters.AddWithValue("@karOrani", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["karOrani"].Value.ToString());
            komut.Parameters.AddWithValue("@birimMaliyet", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["birimMaliyet"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_MUSTERI_KM_SIPARIS (musteriId, ureticiId, kimyasalMaddeId, miktar, odenecek, durum, karOrani, birimMaliyet) values (@musteriId, @ureticiId, @kimyasalMaddeId, @miktar, @odenecek, @durum, @karOrani, @birimMaliyet)";

            komut.Parameters.AddWithValue("@musteriId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriId"].Value.ToString());
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@kimyasalMaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kimyasalMaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@miktar", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["miktar"].Value.ToString());
            komut.Parameters.AddWithValue("@odenecek", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["odenecek"].Value.ToString());
            komut.Parameters.AddWithValue("@durum", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["durum"].Value.ToString());
            komut.Parameters.AddWithValue("@karOrani", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["karOrani"].Value.ToString());
            komut.Parameters.AddWithValue("@birimMaliyet", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["birimMaliyet"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}




/*





	TBL_MUSTERILER.cs






*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_MUSTERILER : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_MUSTERILER()
        {
            InitializeComponent();
        }

        private void TBL_MUSTERILER_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_MUSTERILER";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 3;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_MUSTERILER WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_MUSTERILER SET musteriAdi = @musteriAdi, musteriSoyadi = @musteriSoyadi, musteriAdres = @musteriAdres WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@musteriAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@musteriSoyadi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriSoyadi"].Value.ToString());
            komut.Parameters.AddWithValue("@musteriAdres", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriAdres"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_MUSTERILER (musteriAdi, musteriSoyadi, musteriAdres) values (@musteriAdi, @musteriSoyadi, @musteriAdres)";
            komut.Parameters.AddWithValue("@musteriAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@musteriSoyadi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriSoyadi"].Value.ToString());
            komut.Parameters.AddWithValue("@musteriAdres", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["musteriAdres"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}




/*





	TBL_TEDARIKCI.cs






*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_TEDARIKCI : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_TEDARIKCI()
        {
            InitializeComponent();
        }

        private void TBL_TEDARIKCI_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_TEDARIKCI";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 3;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_TEDARIKCI WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_TEDARIKCI SET firmaAdi = @firmaAdi, sehirAdi = @sehirAdi, ulkeAdi = @ulkeAdi, uzaklik = @uzaklik WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@firmaAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["firmaAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@sehirAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["sehirAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@ulkeAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ulkeAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@uzaklik", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uzaklik"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_TEDARIKCI (firmaAdi, sehirAdi, ulkeAdi, uzaklik) values (@firmaAdi, @sehirAdi, @ulkeAdi, @uzaklik)";
            komut.Parameters.AddWithValue("@firmaAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["firmaAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@sehirAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["sehirAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@ulkeAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ulkeAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@uzaklik", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uzaklik"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}





/*





	TBL_TEDARIKCI_HAMMADDE.cs






*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_TEDARIKCI_HAMMADDE : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_TEDARIKCI_HAMMADDE()
        {
            InitializeComponent();
        }

        private void TBL_TEDARIKCI_HAMMADDE_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_TEDARIKCI_HAMMADDE   ";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 5;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 5;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 5;
            dataGridView1.Columns[4].Width = dataGridView1.Width / 5;
            dataGridView1.Columns[5].Width = dataGridView1.Width / 5;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_TEDARIKCI_HAMMADDE WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_TEDARIKCI_HAMMADDE SET uretimTarihi = @uretimTarihi, tedarikciId = @tedarikciId, hammaddeId = @hammaddeId, satisFiyati = @satisFiyati, stok = @stok WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@uretimTarihi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uretimTarihi"].Value.ToString());
            komut.Parameters.AddWithValue("@tedarikciId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["tedarikciId"].Value.ToString());
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@satisFiyati", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["satisFiyati"].Value.ToString());
            komut.Parameters.AddWithValue("@stok", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["stok"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_TEDARIKCI_HAMMADDE (uretimTarihi, tedarikciId, hammaddeId, satisFiyati, stok) values (@uretimTarihi, @tedarikciId, @hammaddeId, @satisFiyati, @stok)";
            komut.Parameters.AddWithValue("@uretimTarihi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uretimTarihi"].Value.ToString());
            komut.Parameters.AddWithValue("@tedarikciId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["tedarikciId"].Value.ToString());
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@satisFiyati", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["satisFiyati"].Value.ToString());
            komut.Parameters.AddWithValue("@stok", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["stok"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}







/*





	TBL_URETICI.cs





*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_URETICI : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_URETICI()
        {
            InitializeComponent();
        }

        private void TBL_URETICI_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }



        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_URETICI";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 3;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 3;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_URETICI WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_URETICI SET firmaAdi = @firmaAdi, sehirAdi = @sehirAdi, ulkeAdi = @ulkeAdi WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@firmaAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["firmaAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@sehirAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["sehirAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@ulkeAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ulkeAdi"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_URETICI (firmaAdi, sehirAdi, ulkeAdi) values (@firmaAdi, @sehirAdi, @ulkeAdi)";
            komut.Parameters.AddWithValue("@firmaAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["firmaAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@sehirAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["sehirAdi"].Value.ToString());
            komut.Parameters.AddWithValue("@ulkeAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ulkeAdi"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}





/*





	TBL_URETICI_HAMMADDESTOK.cs





*/


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_URETICI_HAMMADDESTOK : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_URETICI_HAMMADDESTOK()
        {
            InitializeComponent();
        }

        private void TBL_URETICI_HAMMADDESTOK_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }



        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_URETICI_HAMMADDESTOK   ";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 4;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 4;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 4;
            dataGridView1.Columns[4].Width = dataGridView1.Width / 4;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_URETICI_HAMMADDESTOK WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_URETICI_HAMMADDESTOK SET uretimTarihi = @uretimTarihi, ureticiId = @ureticiId, hammaddeId = @hammaddeId, stok = @stok WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@uretimTarihi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uretimTarihi"].Value.ToString());
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@stok", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["stok"].Value.ToString());

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_URETICI_HAMMADDESTOK (uretimTarihi, ureticiId, hammaddeId, stok) values (@uretimTarihi, @ureticiId, @hammaddeId, @stok)";
            komut.Parameters.AddWithValue("@uretimTarihi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uretimTarihi"].Value.ToString());
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@stok", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["stok"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}



/*





	TBL_URETICI_KIMYASALMADDESTOK.cs






*/




using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_URETICI_KIMYASALMADDESTOK : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_URETICI_KIMYASALMADDESTOK()
        {
            InitializeComponent();
        }

        private void TBL_URETICI_KIMYASALMADDESTOK_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_URETICI_KIMYASALMADDESTOK";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 6;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 6;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 6;
            dataGridView1.Columns[4].Width = dataGridView1.Width / 6;
            dataGridView1.Columns[5].Width = dataGridView1.Width / 6;
            dataGridView1.Columns[6].Width = dataGridView1.Width / 6;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_URETICI_KIMYASALMADDESTOK WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_URETICI_KIMYASALMADDESTOK SET ureticiId = @ureticiId, kimyasalMaddeId = @kimyasalMaddeId, uretimTarihi = @uretimTarihi, stok = @stok, iscilikMaliyeti = @iscilikMaliyeti, birimFiyat = @birimFiyat, karOrani = @karOrani  WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@kimyasalMaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kimyasalMaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@uretimTarihi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uretimTarihi"].Value.ToString());
            komut.Parameters.AddWithValue("@stok", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["stok"].Value.ToString());
            komut.Parameters.AddWithValue("@iscilikMaliyeti", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["iscilikMaliyeti"].Value.ToString());
            komut.Parameters.AddWithValue("@birimFiyat", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["birimFiyat"].Value.ToString());
            komut.Parameters.AddWithValue("@karOrani", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["karOrani"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_URETICI_KIMYASALMADDESTOK (ureticiId, kimyasalMaddeId , uretimTarihi, stok, iscilikMaliyeti, birimFiyat, karOrani) values ( @ureticiId,  @kimyasalMaddeId,@uretimTarihi, @stok, @iscilikMaliyeti, @birimFiyat, @karOrani)";
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@kimyasalMaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kimyasalMaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@uretimTarihi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["uretimTarihi"].Value.ToString());
            komut.Parameters.AddWithValue("@stok", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["stok"].Value.ToString());
            komut.Parameters.AddWithValue("@iscilikMaliyeti", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["iscilikMaliyeti"].Value.ToString());
            komut.Parameters.AddWithValue("@birimFiyat", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["birimFiyat"].Value.ToString());
            komut.Parameters.AddWithValue("@karOrani", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["karOrani"].Value.ToString());

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}




/*




	TBL_URETICI_TEDARIKCI.cs







*/



using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
namespace VeriTabani
{
    public partial class TBL_URETICI_TEDARIKCI : Form
    {

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-A1HV6T5\\SQLEXPRESS;Initial Catalog=VTP2;Integrated Security=True");
        SqlCommand komut = new SqlCommand();

        public TBL_URETICI_TEDARIKCI()
        {
            InitializeComponent();
        }

        private void TBL_URETICI_TEDARIKCI_Load(object sender, EventArgs e)
        {
            hammaddeleriGetir();
        }
        
        

        public void hammaddeleriGetir()
        {

            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "select * from TBL_URETICI_TEDARIKCI";

            DataTable dt = new DataTable();
            SqlDataAdapter da = new SqlDataAdapter(komut);
            da.Fill(dt);
            dataGridView1.DataSource = dt;


            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            dataGridView1.Columns[0].Visible = false;
            dataGridView1.Columns[1].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[2].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[3].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[4].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[5].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[6].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[7].Width = dataGridView1.Width / 8;
            dataGridView1.Columns[8].Width = dataGridView1.Width / 8;

        }

        private void btn_sil_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "DELETE FROM TBL_URETICI_TEDARIKCI WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();

        }

        private void btn_guncelle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "UPDATE TBL_URETICI_TEDARIKCI SET ureticiId = @ureticiId,tedarikciId=@tedarikciId,hammaddeId=@hammaddeId,kargoUcreti=@kargoUcreti,alisFiyati=@alisFiyati,toplamMaliyet=@toplamMaliyet,adet=@adet,kargoAdi=@kargoAdi WHERE id = '" + dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["id"].Value.ToString() + "'";
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@tedarikciId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["tedarikciId"].Value.ToString());
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@kargoUcreti", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kargoUcreti"].Value.ToString());
            komut.Parameters.AddWithValue("@alisFiyati", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["alisFiyati"].Value.ToString());
            komut.Parameters.AddWithValue("@toplamMaliyet", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["toplamMaliyet"].Value.ToString());
            komut.Parameters.AddWithValue("@adet", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["adet"].Value.ToString());
            komut.Parameters.AddWithValue("@kargoAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kargoAdi"].Value.ToString());


            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }

        private void btn_ekle_Click(object sender, EventArgs e)
        {
            komut.Parameters.Clear();

            if (baglanti.State == ConnectionState.Closed)
            {
                try
                {
                    baglanti.Open();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "Baðlantý hatasý", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

            komut.Connection = baglanti;
            komut.CommandType = CommandType.Text;
            komut.CommandText = "insert into TBL_URETICI_TEDARIKCI (ureticiId,tedarikciId,hammaddeId,kargoUcreti,alisFiyati,toplamMaliyet,adet,kargoAdi) values (@ureticiId,@tedarikciId,@hammaddeId,@kargoUcreti,@alisFiyati,@toplamMaliyet,@adet,@kargoAdi)";
            komut.Parameters.AddWithValue("@ureticiId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["ureticiId"].Value.ToString());
            komut.Parameters.AddWithValue("@tedarikciId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["tedarikciId"].Value.ToString());
            komut.Parameters.AddWithValue("@hammaddeId", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["hammaddeId"].Value.ToString());
            komut.Parameters.AddWithValue("@kargoUcreti", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kargoUcreti"].Value.ToString());
            komut.Parameters.AddWithValue("@alisFiyati", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["alisFiyati"].Value.ToString());
            komut.Parameters.AddWithValue("@toplamMaliyet", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["toplamMaliyet"].Value.ToString());
            komut.Parameters.AddWithValue("@adet", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["adet"].Value.ToString());
            komut.Parameters.AddWithValue("@kargoAdi", dataGridView1.Rows[dataGridView1.SelectedCells[0].RowIndex].Cells["kargoAdi"].Value.ToString());

            komut.ExecuteNonQuery();
            try
            {
                baglanti.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Baðlantý kapanýrken hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            hammaddeleriGetir();
        }
    }
}






